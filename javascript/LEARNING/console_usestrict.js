
/**
 * Whole-script strict mode syntax
 * 타입스크립트를 쓸때는 사용 안해도 됨 
 * 자바스크립트는 굉장히 유연한 언어라서 때로는 위험함. (많은 실수을 할 수 있음)
 * 자바스크립트에서는 선언되지 않은 변수의 값을 할당 한다던지 아니면 기존에 존재하는
 * 프로토타입을 변경한다던지 이런 비상식적인 것들은 다른 언어를 공부하고온 개발자들이 봤을때 미친듯한 행동들임.
 * use strict은 ECMAScript 5에 추가 되어있음
 * user strict을 선언하게 되면 더이상 그런 비상식적인 것을 쓸수가 없게됨.
 * strict 모드로 개발하게 되면 자바스크립트 엔진이 조금 더 효율적으로 빠르게 자바스크립트를 분석함
 */
'use strict';

//a = 10;  브라우저에서 전혀 문제 될 게 없음. 하지만 use strict를 선언하게 되면 에러 발생
let a = 10; // 바닐라.js로 개발할때는 파일 제일 위에 use strict 선언 후 strict 모드로 개발하는 걸 추천

console.log('Hello Javascript');
/* 콘솔
언어 자체에 포함된 것은 아니지만 통상적으로 많이 쓰이는 것이라서
   node.js나 webAPI에 공통적으로 포함 되어있어서 똑같은 콘솔API를 이용해서 
   node.js에서도 출력할 수 있고 브라우저 상에서도 출력할 수 있음.
*/
  
  /*
  * Dev Tools
  * 브라우저에서 딸려나오는 개발툴을 잘활용하면 공부할 때나 현업에서 일할때 유용함.
  * '콘솔탭'안에서는 코드에서 작성한 메시지를 확인할 수도 있지만
  * 여기에서 자바스크립트를 실행 할 수도 있다.
  * 이런것들을 이용해서 동적으로 요소들을 검사하고 붙혀넣고 지우고 그런 간단한 기능들을 여기에서도 충분히 가능
  * '소스탭'에서는 디버깅 할 때 유용함, 브레이크 포인트를 걸어서 디버깅
  */
 
 // 자바스크립트 공식사이트 : ecme-international.org(개발자가 보기에 난잡함.), developer.mozilla.org(공식은 아니지만 추천) 
 